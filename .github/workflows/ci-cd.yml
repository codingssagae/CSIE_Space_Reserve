name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 설정
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Gradle Build
        run: |
          chmod +x gradlew
          ./gradlew build

      - name: 빌드 결과 디렉토리 확인
        run: |
          echo "Build directory contents:"
          find ./build

      - name: SCP 전 파일 존재 여부 확인
        run: |
          JAR_FILE=$(find ./build/libs -name "*.jar" | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "JAR file not found! Exiting."
            exit 1
          else
            echo "Found JAR file: $JAR_FILE"
          fi

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: EC2에 SSH 접속 및 배포
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "$(find ./build/libs -name '*.jar' | head -n 1)"
          target: "~/app"

      - name: EC2 서버에서 애플리케이션 재시작
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            docker stop backend || true
            docker rm backend || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-backend:latest
            docker run -d --name backend -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/my-backend:latest
